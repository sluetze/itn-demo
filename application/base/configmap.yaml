apiVersion: v1
kind: ConfigMap
metadata:
  name: web-portal-config
  labels:
    app: web-portal
    app.kubernetes.io/name: web-portal
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: frontend-team
data:
  app.properties: |
    # Web Portal Configuration
    app.name=Web Portal
    app.description=Frontend Team Demo Application
    app.version=v1.0.0

    # Server Configuration
    server.port=8080
    server.context-path=/

    # Logging Configuration
    logging.level=INFO
    logging.format=JSON

    # Feature Flags
    features.health-check=true
    features.metrics=true
    features.debug=false

  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /tmp/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        server {
            listen 8080;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;

            location /health {
                access_log off;
                return 200 'healthy\n';
                add_header Content-Type text/plain;
            }

            location /ready {
                access_log off;
                return 200 'ready\n';
                add_header Content-Type text/plain;
            }

            location / {
                try_files $uri $uri/ /index.html;
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header X-XSS-Protection "1; mode=block" always;
            }
        }
    }